
// ProjectConfigDlg.h: 头文件
//

#pragma once

class PropertyScanDlg;
class PropertyWashDlg;
class PropertyCoverDlg;
class PropertyReagentDlg;
class PropertyMixDlg;


// CProjectConfigDlg 对话框
class CProjectConfigDlg : public CMFCPropertySheet
{
// 构造
public:
	CProjectConfigDlg(CWnd* pParent = nullptr);	// 标准构造函数
	virtual ~CProjectConfigDlg();

	protected:
	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV 支持

// 实现
protected:
	HICON m_hIcon;

	// 生成的消息映射函数
	virtual BOOL OnInitDialog();
	afx_msg void OnSysCommand(UINT nID, LPARAM lParam);
	afx_msg void OnPaint();
	afx_msg HCURSOR OnQueryDragIcon();
	afx_msg LRESULT OnDisconnect(WPARAM wParam, LPARAM lParam);
	afx_msg void OnBnClickedOk();
	afx_msg void OnBnClickedCancel();
	DECLARE_MESSAGE_MAP()

public:
	PropertyScanDlg* m_pScan;
	PropertyWashDlg* m_pWash;
	PropertyCoverDlg* m_pCover;
	PropertyReagentDlg* m_pReagent;
	PropertyMixDlg* m_pMix;
};



// ProjectConfigDlg.cpp: 实现文件
//

#include "pch.h"
#include "framework.h"
#include "ProjectConfig.h"
#include "ProjectConfigDlg.h"
#include "afxdialogex.h"
#include "PropertyScanDlg.h"
#include "PropertyWashDlg.h"
#include "PropertyCoverDlg.h"
#include "PropertyReagentDlg.h"
#include "PropertyMixDlg.h"
#include "ConnectDlg.h"
#include "DeviceCom.h"
#include "UserMsg.h"



#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// 用于应用程序“关于”菜单项的 CAboutDlg 对话框

class CAboutDlg : public CDialogEx
{
public:
	CAboutDlg();

// 对话框数据
#ifdef AFX_DESIGN_TIME
	enum { IDD = IDD_ABOUTBOX };
#endif

	protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 支持

// 实现
protected:
	DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialogEx(IDD_ABOUTBOX)
{
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)
END_MESSAGE_MAP()


// CProjectConfigDlg 对话框

CProjectConfigDlg::CProjectConfigDlg(CWnd* pParent /*=nullptr*/)
	: CMFCPropertySheet(IDS_MAIN_TITLE, pParent)
{
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);

	SetLook(CMFCPropertySheet::PropSheetLook_Tabs);

	m_psh.dwFlags |= PSH_NOAPPLYNOW;
	m_psh.dwFlags |= PSH_NOCONTEXTHELP;
	m_psh.dwFlags &= ~(PSH_HASHELP);

	// 扫描位
	m_pScan = new PropertyScanDlg();
	m_pScan->Construct(IDD_PROPPAGE_SCAN);
	AddPage(m_pScan);

	// 清洗位
	m_pWash = new PropertyWashDlg();
	m_pWash->Construct(IDD_PROPPAGE_WASH);
	AddPage(m_pWash);

	// 盖板位
	m_pMix = new PropertyMixDlg();
	m_pMix->Construct(IDD_PROPPAGE_MIX);
	AddPage(m_pMix);

	// 试剂位
	m_pReagent = new PropertyReagentDlg();
	m_pReagent->Construct(IDD_PROPPAGE_REAGENT);
	AddPage(m_pReagent);

	// 
	m_pCover = new PropertyCoverDlg();
	m_pCover->Construct(IDD_PROPPAGE_COVER);
	AddPage(m_pCover);
}


CProjectConfigDlg::~CProjectConfigDlg()
{
	if (m_pCover != nullptr)
	{
		delete m_pCover;
		m_pCover = nullptr;
	}

	if (m_pReagent != nullptr)
	{
		delete m_pReagent;
		m_pReagent = nullptr;
	}

	if (m_pMix != nullptr)
	{
		delete m_pMix;
		m_pMix = nullptr;
	}

	if (m_pWash != nullptr)
	{
		delete m_pWash;
		m_pWash = nullptr;
	}

	if (m_pScan != nullptr)
	{
		delete m_pScan;
		m_pScan = nullptr;
	}
}


void CProjectConfigDlg::DoDataExchange(CDataExchange* pDX)
{
	CMFCPropertySheet::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CProjectConfigDlg, CMFCPropertySheet)
	ON_WM_SYSCOMMAND()
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	ON_MESSAGE(WM_DISCONNECT, &CProjectConfigDlg::OnDisconnect)
	ON_BN_CLICKED(IDOK, &CProjectConfigDlg::OnBnClickedOk)
	ON_BN_CLICKED(IDCANCEL, &CProjectConfigDlg::OnBnClickedCancel)
END_MESSAGE_MAP()


// CProjectConfigDlg 消息处理程序

BOOL CProjectConfigDlg::OnInitDialog()
{
	CMFCPropertySheet::OnInitDialog();

	// 将“关于...”菜单项添加到系统菜单中。

	// IDM_ABOUTBOX 必须在系统命令范围内。
	ASSERT((IDM_ABOUTBOX & 0xFFF0) == IDM_ABOUTBOX);
	ASSERT(IDM_ABOUTBOX < 0xF000);

	CMenu* pSysMenu = GetSystemMenu(FALSE);
	if (pSysMenu != nullptr)
	{
		BOOL bNameValid;
		CString strAboutMenu;
		bNameValid = strAboutMenu.LoadString(IDS_ABOUTBOX);
		ASSERT(bNameValid);
		if (!strAboutMenu.IsEmpty())
		{
			pSysMenu->AppendMenu(MF_SEPARATOR);
			pSysMenu->AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);
		}
	}

	// 设置此对话框的图标。  当应用程序主窗口不是对话框时，框架将自动
	//  执行此操作
	SetIcon(m_hIcon, TRUE);			// 设置大图标
	SetIcon(m_hIcon, FALSE);		// 设置小图标

	// TODO: 在此添加额外的初始化代码
	CWnd* p = GetDlgItem(IDHELP);
	p->ShowWindow(SW_HIDE);

	DeviceCom* pc = GetDeviceCom();
	if (nullptr == pc)
	{
		return FALSE;
	}
	//pc->SetWnd(this);
	//pc->Start();

	return TRUE;  // 除非将焦点设置到控件，否则返回 TRUE
}

void CProjectConfigDlg::OnSysCommand(UINT nID, LPARAM lParam)
{
	if ((nID & 0xFFF0) == IDM_ABOUTBOX)
	{
		CAboutDlg dlgAbout;
		dlgAbout.DoModal();
	}
	else
	{
		CMFCPropertySheet::OnSysCommand(nID, lParam);
	}
}

// 如果向对话框添加最小化按钮，则需要下面的代码
//  来绘制该图标。  对于使用文档/视图模型的 MFC 应用程序，
//  这将由框架自动完成。

void CProjectConfigDlg::OnPaint()
{
	if (IsIconic())
	{
		CPaintDC dc(this); // 用于绘制的设备上下文

		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// 使图标在工作区矩形中居中
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// 绘制图标
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CMFCPropertySheet::OnPaint();
	}
}

//当用户拖动最小化窗口时系统调用此函数取得光标
//显示。
HCURSOR CProjectConfigDlg::OnQueryDragIcon()
{
	return static_cast<HCURSOR>(m_hIcon);
}


LRESULT CProjectConfigDlg::OnDisconnect(WPARAM wParam, LPARAM lParam)
{
	DeviceCom* pc = GetDeviceCom();
	if (pc != nullptr)
	{
		pc->End();

		ConnectDlg con;
		if (con.DoModal() == IDOK)
		{
			pc->SetWnd(this);
			pc->Start();
		}
		else
		{
			OnBnClickedCancel();
		}
	}
	return 0;
}


void CProjectConfigDlg::OnBnClickedOk()
{
	EndDialog(IDOK);
}


void CProjectConfigDlg::OnBnClickedCancel()
{
	EndDialog(IDCANCEL);
}
